import queue
import threading
import time
import random

request_types = ["GET", "POST", "PUT"]
processing_times = {
    "GET": (1, 3),
    "POST": (2, 4),
    "PUT": (3, 5)
}

def process_request(request_type):
    min_time, max_time = processing_times[request_type]
    processing_time = random.uniform(min_time, max_time)
    time.sleep(processing_time)
    print(f"Processed {request_type} request in {processing_time:.2f} seconds")

def web_server(request_queue):
    while True:
        request_type = request_queue.get()
        process_request(request_type)
        request_queue.task_done()


def main():
    request_queue = queue.Queue()

    server_thread = threading.Thread(target=web_server, args=(request_queue,))
    server_thread.start()

    request_sequence = random.choices(request_types, k=10)

    for request_type in request_sequence:
        request_queue.put(request_type)

    
    request_queue.join()

    server_thread.join()

if __name__ == "__main__":
    main()
